// <auto-generated />
using System;
using CFCprototype.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CFCprototype.Migrations
{
    [DbContext(typeof(CFCprototypeContext))]
    partial class CFCprototypeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CFCprototype.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventHostMemberID")
                        .HasColumnType("int");

                    b.Property<string>("EventTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("EventHostMemberID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("CFCprototype.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("CFCprototype.Models.MembersClassifieds", b =>
                {
                    b.Property<int>("MembersClassifiedsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassifiedBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassifiedTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PostDuration")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PosterNameMemberID")
                        .HasColumnType("int");

                    b.HasKey("MembersClassifiedsID");

                    b.HasIndex("PosterNameMemberID");

                    b.ToTable("MembersClassifieds");
                });

            modelBuilder.Entity("CFCprototype.Models.PrayerRequest", b =>
                {
                    b.Property<int>("PrayerRequestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequestBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestPosterMemberID")
                        .HasColumnType("int");

                    b.Property<string>("RequestSubject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrayerRequestID");

                    b.HasIndex("RequestPosterMemberID");

                    b.ToTable("PrayerRequest");
                });

            modelBuilder.Entity("CFCprototype.Models.Sermon", b =>
                {
                    b.Property<int>("SermonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SermonDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SermonLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SermonTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SermonID");

                    b.ToTable("Sermon");
                });

            modelBuilder.Entity("CFCprototype.Models.Event", b =>
                {
                    b.HasOne("CFCprototype.Models.Member", "EventHost")
                        .WithMany()
                        .HasForeignKey("EventHostMemberID");
                });

            modelBuilder.Entity("CFCprototype.Models.MembersClassifieds", b =>
                {
                    b.HasOne("CFCprototype.Models.Member", "PosterName")
                        .WithMany()
                        .HasForeignKey("PosterNameMemberID");
                });

            modelBuilder.Entity("CFCprototype.Models.PrayerRequest", b =>
                {
                    b.HasOne("CFCprototype.Models.Member", "RequestPoster")
                        .WithMany()
                        .HasForeignKey("RequestPosterMemberID");
                });
#pragma warning restore 612, 618
        }
    }
}
